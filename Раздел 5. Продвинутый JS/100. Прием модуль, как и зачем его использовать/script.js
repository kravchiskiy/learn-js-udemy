/**
 * модули по своей структуре самодостаточны и нзависимы. хорошо разработанный модуль никак не зависит от другого кода и может быть легко заменен или же удален. во вторых они обеспечивают чистоту глобального пространства.
 * когда мы создаем обычный скрипт и объявляем переменные они заносится в глобальную область видимости. делать этого не рекомендуется, глобальных переменныхдолжно быть как можно меньше. мдули позволяют нам избежать загрязнение глобального пространства, а так же избежать конфликты с одинаковыми именами.
 * пример, когда подключены два скрипта, и внутри их есть переменные с одинаковыми именами.
 *
 *
 * Когда мы переносим наш код из проекта в проект, инкапсуляция позволяет нам бзболезнено менять внутренюю реализацию модулей. поэтому его можно менять каждый раз немного подстраиваясь под задачу.
 *
 * теперь к практике. существует множество способов использовать этот прием. сейчас все пользуются классами, но прием был придуман еще давно, и там просто обычная функция.
 *
 * разберем два способа реализации модулей через нативную реализаццию.
 */
/**
 * 1) анонимная самовызывающаяся функция.
 * анонимная ибо нет имени. самовызывающаяся ибо после ее объявления она вызывается "}()"
 * классный прием, который позволяет вам написать код, и сразу же его запустиить и получить локальную область видимости.
 * внешние круглые скобки нужны. если их не будет, то мы получим обычную functioin declaration, а она не может быть анонимной. а если же в круглых скобках, то она превращается в function expression, и вот она уже может быть анонимной.
 * (function () {} () )
 * (function () {} ) ();
 */
const number = 1;
(function () {
	let num = 6;
	console.log(num);
})();

(function () {
	let number = 5;
	console.log(number);
})();

/**
 * 2) с помощью объектного интерфейса. модуль записываем в переменную и в нем возвращаем методы доступные снаружи.
 */
const user = (function () {
	const privat = function () {
		console.log('hi');
	};

	return {
		sayHello: privat,
	};
})();
user.sayHello();
//реализовано два модуля с помощью самовызывающейся анонимной функции.
