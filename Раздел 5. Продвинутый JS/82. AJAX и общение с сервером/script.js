/**
 * 1й вариант ajax XmlHttpRequest - он уже не совсем актуален.
 */
const inputRub = document.querySelector('#rub');
const inputUsd = document.querySelector('#usd');
//событие инпута более универсальное, чет чейндж, т.к. чейндж применяется толкько после смены фокуса на элементе.
inputRub.addEventListener('input', () => {
	//тут нам нужно произвести запрос на сервер.
	const request = new XMLHttpRequest();

	//Теперь, когда мы создали такой экземпляр класса, у него есть свои свойства и методы, а так же события.
	//request.open(); //собирает настройки которые помогут сделать запрос. 1й аргумент это метод(гет, пост и тд), 2й аргумент - это путь(юрл), 3й аргумент - это ассинхронность., 4 & 5 - login pass
	request.open('GET', './current.json');
	//Когда мы отправляем запрос, нам нужно указать а что мы отправляем, какая это информация, в чем она закодирована и тому подобное. делается это для того чтобы наши трансферные протоколы четко понимали что они передают и когда они приходили к серверу - сервер четко понимал что он принимает в себя. это json файл или это какие-то изображения и тп.
	//для ввсего этого существуют http-заголовки.
	request.setRequestHeader('Content-type', 'application/json; charset=utf-8');
	request.send();

	//поговорим о сойствах этого объекта. когда мы получили объект от серера, мы как бы должны осмотреть его и что-то начнем с ним делать.
	//status - статус ответа. 404 или же 200 и тд.
	//statusText - это текстовое описание ответа от сервера.
	//responce - ответ от сервера.
	//readyState - текущее состояние нашего запроса. или чистовое значени от 0 - 4, или же текстовое.

	//события которые есть у этого объекта.
	//load, start, progress, abort, timeOut, load, end, readystatechange
	//readysateChange - проверяется каждый этап нашего запроса.
	//load - полностью загрузился и получили какой-то результат.
	request.addEventListener('load', () => {
		//событие отслеживает статус готовности нашего запроса в данный текущий момент.

		if (request.status === 200) {
			console.log(request.response);
			const data = JSON.parse(request.response);
			inputUsd.value = (+inputRub.value / data.current.usd).toFixed(2);
		} else {
			inputUsd.value = 'что-то пошло не так';
		}
	});
});
